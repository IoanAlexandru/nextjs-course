{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alexandru/learning/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  var meetupData = props.meetupData;\n  var image = meetupData.image,\n      title = meetupData.title,\n      address = meetupData.address,\n      description = meetupData.description;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/alexandru/learning/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AAD+B,MAGvBC,KAHuB,GAGgBD,UAHhB,CAGvBC,KAHuB;AAAA,MAGhBC,KAHgB,GAGgBF,UAHhB,CAGhBE,KAHgB;AAAA,MAGTC,OAHS,GAGgBH,UAHhB,CAGTG,OAHS;AAAA,MAGAC,WAHA,GAGgBJ,UAHhB,CAGAI,WAHA;AAK/B,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KADT;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,OAAO,EAAEC,OAHX;AAIE,MAAA,WAAW,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA,aALF;AAAA,kBADF;AAcD,CAnBD;;KAAMN,a;;AA6EN,eAAeA,aAAf","sourcesContent":["import Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = (props) => {\n  const meetupData = props.meetupData;\n\n  const { image, title, address, description } = meetupData;\n\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n        <meta name=\"description\" content={description}></meta>\n      </Head>\n      <MeetupDetail\n        image={image}\n        title={title}\n        address={address}\n        description={description}\n      />\n    </>\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin:admin@cluster0.6fugc6u.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin:admin@cluster0.6fugc6u.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  const meetupData = {\n    id: meetup._id.toString(),\n    title: meetup.title,\n    address: meetup.address,\n    image: meetup.image,\n    description: meetup.description,\n  };\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: meetupData,\n    },\n  };\n};\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}